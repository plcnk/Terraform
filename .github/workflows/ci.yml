name: "CI"

on:
  push:
    branches:
      - master
  pull_request:

strategy:
  matrix:
    script:
      - aws-ec2-instance
      - digitalocean-droplet
      - digitalocean-k8s-cluster

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform -chdir=${{ matrix.script }} fmt -check

      - name: Terraform Init
        id: init
        run: terraform -chdir=${{ matrix.script }} init
        
      - name: Terraform Validate
        id: validate
        run: terraform -chdir=${{ matrix.script }} validate -no-color

      - uses: actions/github-script@v5
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### Script: **${{ matrix.script }}**
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
